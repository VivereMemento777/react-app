/* --------- mixins --------- */

@mixin arrow($width, $height, $bg, $direction) {
	width: 0px;
	height: 0px;
	border-style: solid;

	@if $direction == t {
		border-width: 0 $width / 2 + px $height + px $width / 2 + px;
		border-color: transparent transparent $bg transparent;
	}

	@if $direction == r {
		border-width: $height / 2 + px 0 $height / 2 + px $width + px;
		border-color: transparent transparent transparent $bg;
	}

	@if $direction == b {
		border-width: $height + px $width / 2 + px 0 $width / 2 + px;
		border-color: $bg transparent transparent transparent;
	}

	@if $direction == l {
		border-width: $height / 2 + px $width + px $height / 2 + px 0;
		border-color: transparent $bg transparent transparent;
	}

	@if $direction == tl {
		border-width: $height + px $width + px 0 0;
		border-color: $bg transparent transparent transparent;
	}

	@if $direction == tr {
		border-width: 0 $width + px $height + px 0;
		border-color: transparent $bg transparent transparent;
	}

	@if $direction == br {
		border-width: 0 0 $height + px $width + px;
		border-color: transparent transparent $bg transparent;
	}

	@if $direction == bl {
		border-width: $height + px 0 0 $width + px;
		border-color: transparent transparent transparent $bg;
	}
}

@mixin inlineblock ($valine: top) {
	display: inline-block;
	vertical-align: $valine;
}

@mixin clearfix {
	&:before,
	&:after {
		content: "";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin border-radius($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}

@mixin box-shadow($string...) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	box-shadow: $string;
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin placecolor($color: #000000) {
	&::-webkit-input-placeholder {
		color: $color;
	}
	&:-moz-placeholder {
		color: $color;
	}
	&::-moz-placeholder {
		color: $color;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
}

@mixin vertical-gradient($top-color: #ffffff, $bottom-color: #000000) {
	background-color: $top-color;
	background-image: -webkit-gradient(linear, left top, left bottom, from($top-color), to($bottom-color)); /* Chrome, Safari 4+ */
	background-image: -webkit-linear-gradient(top, $top-color, $bottom-color); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
	background-image: -moz-linear-gradient(top, $top-color, $bottom-color); /* Firefox 3.6-15 */
	background-image: -o-linear-gradient(top, $top-color, $bottom-color); /* Opera 11.10-12.00 */
	background-image: linear-gradient(to bottom, $top-color, $bottom-color); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=$top-color, EndColorStr=$bottom-color);
}

@mixin transform($transforms...) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

/* --------- centered --------- */

@mixin absolute-center {
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	margin: auto;
	position: absolute;
}

@mixin cover {
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center center;
}

@mixin centered {
	top: 50%;
	left: 50%;
	@include transform(translate(-50%, -50%));
}


/* --------- fonts --------- */

@mixin fonts($font-url, $font-name, $weight: normal, $style: normal) {
  font-family: $font-name;
	// src: url($font-url + '.eot'); // IE9 Compat Modes
	src: url($font-url + '.ttf') format('truetype'); // Safari, Android, iOS
	// url($font-url + '.svg#' + $font-name) format('svg'); // Legacy iOS
  font-weight: $weight;
  font-style: $style;
}

/* --------- responsive mixins --------- */

@mixin desktop {
	@media screen and (max-width: 1922px) {
		@content;
	}
}

@mixin laptop {
	@media screen and (max-width: 1440px) {
		@content;
	}
}

@mixin netbook {
	@media screen and (max-width: 1080px) {
		@content;
	}
}

@mixin tablets {
	@media screen and (max-width: 780px) {
		@content;
	}
}

@mixin phones {
	@media screen and (max-width: 580px) {
		@content;
	}
}

@mixin small-phones {
	@media screen and (max-width: 375px) {
		@content;
	}
}

@function rem($target, $context: $base-font-size) {
	@if $target == 0 { @return 0 }
	@return $target / $context + 0rem;
}

@mixin pulseAnimation($name, $from, $to, $color) {
	@keyframes #{$name} {
		from {
			box-shadow: 0 0 0 $from $color;
			opacity: 0.3;
		}
	
		50% {
			box-shadow: 0 0 0 $to $color;
			opacity: 1;
		}
	
		to {
			box-shadow: 0 0 0 $from  $color;
			opacity: 0.3;
		}
	}
}
